{"remainingRequest":"/Users/JordanStone/Documents/Code/websites/vueTesting/quiz_app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/JordanStone/Documents/Code/websites/vueTesting/quiz_app/src/components/QuestionBox.vue?vue&type=style&index=0&id=62ab2b85&scoped=true&lang=css&","dependencies":[{"path":"/Users/JordanStone/Documents/Code/websites/vueTesting/quiz_app/src/components/QuestionBox.vue","mtime":1596667465023},{"path":"/Users/JordanStone/Documents/Code/websites/vueTesting/quiz_app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/JordanStone/Documents/Code/websites/vueTesting/quiz_app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/JordanStone/Documents/Code/websites/vueTesting/quiz_app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/JordanStone/Documents/Code/websites/vueTesting/quiz_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/JordanStone/Documents/Code/websites/vueTesting/quiz_app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxpc3QtZ3JvdXB7CiAgbWFyZ2luLWJvdHRvbTogMTVweDsKfQoubGlzdC1ncm91cC1pdGVtOmhvdmVyewogIGN1cnNvcjogcG9pbnRlcjsKICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7Cn0KLmJ0bnsKICBtYXJnaW46IDAgMjBweDsKfQouUXVlc3Rpb25Cb3hDb250YWluZXJ7CiAgbWFyZ2luLXRvcDogMzBweDsKfQouc2VsZWN0ZWR7CiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRibHVlOwp9Ci5jb3JyZWN0ewogIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JlZW47Cn0KLmluY29ycmVjdHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7Cn0K"},{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div v-if=\"index<10\" class=\"QuestionBoxContainer\">\n    <b-jumbotron lead=\"Bootstrap v4 Components for Vue.js 2\">\n      <!-- <template v-slot:lead>{{currQuestion.question}}</template> -->\n      <template v-slot:lead><span v-html=\"currQuestion.question\"></span></template>\n      <hr class=\"my-4\" />\n\n      <b-list-group>\n        <b-list-group-item v-for=\"(answer,index) in shuffledAnswers\" \n        v-bind:key=\"index\"\n        @click.prevent=\"selectAnswer(index)\"\n        v-bind:class=\"answerClass(index)\"\n        >\n          <span v-html=\"answer\"></span>\n          </b-list-group-item>\n      </b-list-group>\n      <!-- <b-button variant=\"secondary\"\n      v-bind:disabled=\"index<1\"\n      @click=\"previous\"\n      >Back{{index}}</b-button> -->\n\n      <b-button variant=\"primary\" \n      v-on:click=\"submitAnswer\"\n      v-bind:disabled=\"selectedIndex===null || answered\"\n      >\n      Submit</b-button>\n      <b-button variant=\"success\" href=\"#\" \n      v-bind:disabled=\"!answered\"\n      @click=\"next\">\n      Next</b-button>\n\n    </b-jumbotron>\n  </div>\n  <div v-else>\n    <br>\n        <b-jumbotron lead=\"Bootstrap v4 Components for Vue.js 2\">\n      <!-- <template v-slot:lead>{{currQuestion.question}}</template> -->\n      <template v-slot:lead>You got {{(numCorrect/numTotal)*100}}% Correct! </template>\n      <hr class=\"my-4\" />\n\n      <b-button variant=\"primary\" \n      v-on:click=\"update\"\n      >\n      Restart</b-button>\n    </b-jumbotron>\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash'\nexport default {\n  //props is data passed from other component but data() is local\n  props: {\n    currQuestion: Object,\n    next: Function,\n    increment:Function,\n    previous: Function,\n    index: Number,\n    numCorrect: Number,\n    numTotal: Number,\n    update: Function\n  },\n  data: function(){\n    return{\n      selectedIndex: null,\n      shuffledAnswers:[],\n      correctIndex: null,\n      answered: false\n    }\n  },\n  watch: {\n    currQuestion: {\n      immediate: true,\n      handler(){\n      this.selectedIndex=null\n      this.answered=false\n      this.shuffleAnswers()\n      }\n    }\n  },\n  computed: {\n    answers() {\n      let answers = [...this.currQuestion.incorrect_answers]\n      answers.push(this.currQuestion.correct_answer)\n      return answers\n    }\n  },\n  methods:{\n    shuffleAnswers(){\n      let answers = [...this.currQuestion.incorrect_answers,\n      this.currQuestion.correct_answer]\n      this.shuffledAnswers = _.shuffle(answers)\n      this.correctIndex = this.shuffledAnswers.indexOf(this.currQuestion.correct_answer)\n      console.log(this.correctIndex)\n    },\n    selectAnswer(index) {\n      this.selectedIndex = index\n    },\n    submitAnswer(){\n      let isCorrect = false\n      if(this.selectedIndex===this.correctIndex){\n        isCorrect=true\n      }\n      this.answered=true\n      this.increment(isCorrect)\n    },\n    answerClass(index){\n      let answerClass = ''\n      if(!this.answered && this.selectedIndex ===index){\n        answerClass='selected'\n      }\n      else if(this.answered && this.correctIndex===index){\n        answerClass='correct'\n      }\n      else if(this.answered && this.selectedIndex===index && this.correctIndex!==this.SelectedIndex){\n        answerClass ='incorrect'\n      }\n      return answerClass\n    }\n  }\n};\n</script>\n<style scoped>\n  .list-group{\n    margin-bottom: 15px;\n  }\n  .list-group-item:hover{\n    cursor: pointer;\n    background-color: lightgray;\n  }\n  .btn{\n    margin: 0 20px;\n  }\n  .QuestionBoxContainer{\n    margin-top: 30px;\n  }\n  .selected{\n    background-color: lightblue;\n  }\n  .correct{\n    background-color: lightgreen;\n  }\n  .incorrect{\n    background-color: red;\n  }\n</style>"]}]}